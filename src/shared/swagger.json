{
  "openapi": "3.0.0",
  "info": {
    "title": "API User",
    "description": "Api responsible for creating and validating users",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Develop",
      "email": "augustodanieltec@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    },
    {
      "url": "http://portifolio-user-api.herokuapp.com",
      "description": "Heroku server"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Check user credentials",
        "operationId": "signin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "This route is responsible for check user credentials",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Login"
            }
          }
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "operationId": "signup",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "This route is responsible for register a new user",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was registered successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User created successfully",
                      "example": "User created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed! email is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Bad Request",
                      "example": "Failed! email is already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/getUsers": {
      "get": {
        "summary": "Get all users",
        "description": "Get all exist users in database",
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users was retrieved successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No token provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/role/createRole": {
      "post": {
        "summary": "User profile registration",
        "description": "This route is responsible for create a new profile for users",
        "operationId": "createRole",
        "tags": [
          "Role"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role was registered successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Save role name in lower case",
                      "example": "Role was registered successfully!"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "admin"
                        },
                        "_id": {
                          "type": "string",
                          "example": "6297fc9c"
                        },
                        "__v": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users role found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/role/getRoles": {
      "get": {
        "summary": "User profile list",
        "description": "This route is responsible for listering for all roles",
        "operationId": "getRoles",
        "tags": [
          "Role"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success",
                      "example": "Success!"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "admin"
                          },
                          "_id": {
                            "type": "string",
                            "example": "6297fc9c"
                          },
                          "__v": {
                            "type": "number",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Roles not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/role/updateRole/{name}": {
      "patch": {
        "summary": "Update role",
        "description": "This route is responsible for update a role",
        "operationId": "updateRole",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role was updated successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Role was updated successfully!",
                      "example": "Role was updated successfully!"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/role/deleteRole/{name}": {
      "delete": {
        "summary": "Delete role",
        "description": "This route is responsible for delete a role",
        "operationId": "deleteRole",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role was deleted successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Role was deleted successfully!",
                      "example": "Role was deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "message": {
          "type": "string",
          "description": "Bad Request",
          "example": "string"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phone": {
            "type": "number"
          },
          "role": {
            "type": "array",
            "description": "Momentarily the role is static, so you must use this string",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}