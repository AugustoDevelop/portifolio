{
  "openapi": "3.0.0",
  "info": {
    "title": "API User",
    "description": "Api responsible for creating and validating users",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Develop",
      "email": "augustodanieltec@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    },
    {
      "url": "http://portifolio-user-api.herokuapp.com",
      "description": "Heroku server"
    }
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Check user credentials",
        "operationId": "signin",
        "requestBody": {
          "description": "This route is responsible for check user credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was authentic successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Invalid Passaword": {
                    "value": {
                      "message": "Password not match",
                      "accessToken": "Token not generated"
                    }
                  },
                  "Invalid email": {
                    "value": {
                      "message": "Invalid email",
                      "accessToken": "Token not generated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Internal": {
                    "value": {
                      "message": "Internal server error",
                      "accessToken": "Token not generated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "operationId": "signup",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "This route is responsible for register a new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was registered successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User creation failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegUser"
                },
                "examples": {
                  "Email already exists": {
                    "value": {
                      "message": "Email already exists"
                    }
                  },
                  "Username already exists": {
                    "value": {
                      "message": "Username already exists"
                    }
                  },
                  "Phone already exists": {
                    "value": {
                      "message": "Phone already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Get all exist users in database",
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users was retrieved successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/ResponseGetUsers"
                  }
                },
                "examples": {
                  "result": {
                    "value": [
                      {
                        "fullName": "Test Full Name",
                        "username": "username",
                        "email": "email@example.com",
                        "gender": "male",
                        "phone": 333,
                        "roles": [
                          "1a2b6d"
                        ],
                        "created_at": "2022-06-02T03:13:55.948Z",
                        "updated_at": "2022-06-02T03:13:56.145Z"
                      },
                      {
                        "fullName": "Swagger Full Name",
                        "username": "swagger",
                        "email": "swagger1@gmail.com",
                        "gender": "female",
                        "phone": 222,
                        "roles": [
                          "1a2b3c4d"
                        ],
                        "created_at": "2022-06-11T08:52:46.219Z",
                        "updated_at": "2022-06-11T08:52:46.219Z"
                      }
                    ]
                  },
                  "result Empty": {
                    "value": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Unauthenticated": {
                    "value": {
                      "message": "Unauthorized",
                      "accessToken": "Invalid Token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Internal": {
                    "value": {
                      "message": "Internal Server Error",
                      "accessToken": "Token not generated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "summary": "Get user by email",
        "description": "This route is responsible for get user by email",
        "operationId": "getUserByEmail",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                },
                "examples": {
                  "user": {
                    "value": {
                      "fullName": "Test Full Name",
                      "username": "username",
                      "email": "email@example.com",
                      "gender": "male",
                      "phone": 333,
                      "roles": [
                        "1a2b6d"
                      ],
                      "created_at": "2022-06-02T03:13:55.948Z",
                      "updated_at": "2022-06-02T03:13:56.145Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If not sent in email format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlyMessage"
                },
                "examples": {
                  "Email not provided": {
                    "value": {
                      "message": "Email not provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Unauthenticated": {
                    "value": {
                      "message": "Unauthorized",
                      "accessToken": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete user by id",
        "description": "This route is responsible for delete user by id",
        "operationId": "deleteUserById",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "User deleted": {
                    "value": {
                      "message": "User deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If not sent in id format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlyMessage"
                },
                "examples": {
                  "Id not provided": {
                    "value": {
                      "message": "Id not provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMessage"
                },
                "examples": {
                  "Unauthenticated": {
                    "value": {
                      "message": "Unauthorized",
                      "accessToken": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/role": {
      "post": {
        "summary": "User profile registration",
        "description": "This route is responsible for create a new profile for users",
        "operationId": "createRole",
        "tags": [
          "Role"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role was registered successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Save role name in lower case",
                      "example": "Role was registered successfully!"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "admin"
                        },
                        "_id": {
                          "type": "string",
                          "example": "6297fc9c"
                        },
                        "__v": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users role found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/roles": {
      "get": {
        "summary": "User profile list",
        "description": "This route is responsible for listering for all roles",
        "operationId": "getRoles",
        "tags": [
          "Role"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success",
                      "example": "Success!"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "admin"
                          },
                          "_id": {
                            "type": "string",
                            "example": "6297fc9c"
                          },
                          "__v": {
                            "type": "number",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Roles not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/role/{name}": {
      "patch": {
        "summary": "Update role",
        "description": "This route is responsible for update a role",
        "operationId": "updateRole",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Old role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role was updated successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Role was updated successfully!",
                      "example": "Role was updated successfully!"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/roles/drole/{name}": {
      "delete": {
        "summary": "Delete role",
        "description": "This route is responsible for delete a role",
        "operationId": "deleteRole",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role was deleted successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Role was deleted successfully!",
                      "example": "Role was deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New role name",
            "example": "string"
          }
        }
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phone": {
            "type": "number"
          },
          "role": {
            "type": "array",
            "description": "Momentarily the role is static, so you must use this string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResponseRegUser": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phone": {
            "type": "number"
          },
          "roles": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "ResponseGetUsers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Users"
        }
      },
      "RequestLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "DefaultMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          },
          "accessToken": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          },
          "accessToken": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "OnlyMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}